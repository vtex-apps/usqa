name: '[QE] Quality Engineering'

on:
  # Just for debugging purposes
  workflow_dispatch:

  # Allow this to be called by others
  workflow_call:
    inputs:
      runLint:
        description: 'Run Lint?'
        type: boolean
        default: false
        required: false
      runUnitTests:
        description: 'Run Unit Tests?'
        type: boolean
        default: false
        required: false
      runSonarCloud:
        description: 'Run SonarCloud for NodeJS?'
        type: boolean
        default: false
        required: false
      runSonarClouddotNet:
        description: 'Run SonarCloud for dotNet?'
        type: boolean
        default: false
        required: false
      runCypress:
        description: 'Run Cypress?'
        type: boolean
        default: false
        required: false
    secrets:
      sonar:
        description: 'A token to have access to SonarCloud'
        required: false
      cypress:
        description: 'A JSON to pass make Cy-Runner works'
        required: false

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:

  # check here if it is safe to run it on pull_request_target events
  safe:
    name: 'Security check'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 'Check PR origin'
        if: | 
          (github.event_name == 'pull_request_target' && contains(github.event.label.name, 'safe to test')) ||
          (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
        run: exit 0
      - name: 'Stop if out side without the label "safe to test"'
        if: (github.event_name == 'pull_request_target' && !contains(github.event.label.name, 'safe to test'))
        run: |
          echo "ðŸ’¡ Thank you for bring your contribution on this repository!"
          echo "   Before the we review this this PR, it must pass our Quality Engineering process."
          echo "   Please, ask for someone from VTEX to read your changes and add the label 'safe to test' on your PR."
          echo "   If you made changes on PR after the label, someone need to take it out and add it again."
          exit 1

  # To speedup let's cache whatever we maybe
  # Every other job depends on cache, so let's
  cache:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ safe ]
    steps:
      - name: 'Checkout main repo'
        uses: actions/checkout@v3
      - name: 'Checkout Toolbelt'
        uses: actions/checkout@v3
        with:
          repository: vtex/toolbelt
          ref: qe/cypress
          path: toolbelt
      - name: 'Checkout Cy-Runner'
        uses: actions/checkout@v3
        with:
          repository: vtex-apps/cy-runner
          ref: main
          path: cy-runner
      - name: 'Set up NodeJS 16'
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: |
            toolbelt/yarn.lock
            cy-runner/yarn.lock
      - name: 'Get Toolbelt packages'
        run: yarn install --frozen-lockfile
        working-directory: ./toolbelt
      - name: 'Get Cy-Runner packages'
        run: yarn install --frozen-lockfile
        working-directory: ./cy-runner
      - name: 'Cache Cypress binary'
        uses: actions/cache@v3
        id: cypress-binary
        with:
          path: ./cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('./cy-runner/yarn.lock') }}
      - name: 'Build Cypress binary'
        if: steps.cypress-binary.outputs.cache-hit != 'true'
        run: yarn cypress install
        working-directory: ./cy-runner
      - name: 'Print Cypress info'
        run: yarn cypress info
        working-directory: ./cy-runner

  lint:
    name: 'Lint'
    if: ${{ inputs.runLint }}
    runs-on: ubuntu-latest
    needs: [ safe, cache ]
    steps:
      - name: 'Checkout main repo'
        uses: actions/checkout@v3
      - name: 'Set up NodeJS 16'
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - name: 'Install Yarn packages'
        run: |
          PWD=$(pwd)
          if [[ -f "package.json" ]]; then
            # Install root packages
            yarn install --frozen-lockfile
          fi
          if [[ -f "./node/package.json" ]]; then
            # Install node packages
            cd ./node && yarn install --frozen-lockfile
            cd $PWD
          fi
          if [[ -f "./react/package.json" ]]; then
            # Install react packages
            cd ./react && yarn install --frozen-lockfile
            cd $PWD
          fi



